name: Update Game Cards Data

on:
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 时间 00:00 运行（北京时间 08:00）
  workflow_dispatch:      # 允许手动触发
  push:
    paths-ignore:
      - 'data/game_cards.json'  # 忽略数据文件本身的更改
      - 'data/action_cards.json'  # 新增：忽略第二个数据文件

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 授予写入仓库的权限
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整历史记录
        
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install Chrome browser
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: stable
        
    - name: Install Python packages
      run: pip install -r requirements.txt
        
    - name: Run game cards scraper
      run: python scraper.py  # 第一个爬虫
      
    # 新增步骤：运行第二个爬虫
    - name: Run activity cards scraper
      run: python activity.py  # 第二个爬虫
      
    - name: Commit and push changes
      uses: actions/github-script@v6
      with:
        script: |
          const { execSync } = require('child_process');
          
          // 配置 Git 用户
          execSync('git config --global user.name "GitHub Actions"');
          execSync('git config --global user.email "actions@users.noreply.github.com"');
          
          // 添加更改的文件 (同时添加两个数据文件)
          execSync('git add data/game_cards.json data/action_cards.json');
          
          // 检查是否有更改
          const status = execSync('git status --porcelain').toString().trim();
          if (!status) {
            console.log('没有需要提交的更改');
            return;
          }
          
          // 提交更改
          const commitMessage = `自动更新数据: ${new Date().toLocaleString('zh-CN', { timeZone: 'Asia/Shanghai' })}`;
          execSync(`git commit -m "${commitMessage}"`);
          
          // 强制推送到 GitHub
          try {
            execSync('git push origin HEAD:${{ github.ref }} --force');
            console.log('强制推送成功');
          } catch (error) {
            console.error('强制推送失败:', error);
            
            // 如果强制推送失败，先拉取最新更改再强制推送
            console.log('尝试拉取最新更改并强制推送...');
            execSync('git fetch origin');
            execSync('git reset --hard origin/${{ github.ref }}');
            execSync('git merge --ff-only origin/${{ github.ref }}');
            execSync('git push origin HEAD:${{ github.ref }} --force');
            console.log('重新推送成功');
          }

    - name: Push to Gitee Mirror
      env:
        GITEE_TOKEN: ${{ secrets.GITEE_TOKEN }}
        GITEE_USERNAME: zisekongling
        GITEE_REPO: blue_archive
      run: |
        # 添加 Gitee 远程仓库
        git remote add gitee https://${{ env.GITEE_USERNAME }}:${{ env.GITEE_TOKEN }}@gitee.com/${{ env.GITEE_USERNAME }}/${{ env.GITEE_REPO }}.git
        
        # 强制推送到 Gitee 镜像仓库
        git push --force gitee HEAD:${{ github.ref }}
        
        echo "已成功推送到 Gitee 镜像仓库"
